name: deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::557062710055:role/GH_Actions_Garden_Deployer
        role-session-name: garden-backend-deployer
        aws-region: us-east-1

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'

    - name: Create dependency layer
      run: |
        python -m pip install --upgrade pip
        mkdir python
        #install all dependencies as defined by requirements.txt in the authorizer directory
        pip3 install --platform manylinux2010_x86_64 \
                     --use-deprecated=legacy-resolver  \
                     --implementation cp \
                     --python 3.9 \
                     --only-binary=:all: --upgrade \
                     -r authorizer/requirements.txt -t ./python
        #zip files into current directory
        zip -r gardenLayer.zip ./python
        aws lambda publish-layer-version --layer-name GardenPythonLayer --zip-file fileb://./gardenLayer.zip --compatible-runtimes python3.6 python3.7 > layer_info.json
        cat layer_info.json

    - name: Upload Globus Auth Function
      run: |
         pip3 install --platform manylinux2010_x86_64 \
                      --use-deprecated=legacy-resolver  \
                      --implementation cp \
                      --python 3.9 \
                      --only-binary=:all: --upgrade \
                      -r authorizer/requirements.txt -t ./packages
         cd packages
         zip -r ../authorizer.zip .
         cd ..
         cp authorizer/lambda_function.py ./lambda_function.py
         zip authorizer.zip ./lambda_function.py
         zip authorizer.zip ./lambda_function.py         
         rm ./lambda_function.py
         aws lambda update-function-code --function-name GardenAuthorizer --zip-file fileb://./authorizer.zip

    - name: Upload App Function
      run: |
        cd app
        zip -r ../app.zip *
        aws lambda update-function-code --function-name GardenApp --zip-file fileb://../app.zip