name: tests
on:
  pull_request:
    branches:
      - "*"
  workflow_dispatch:
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    name: build

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install pipx
        run: |
          pip install --upgrade pip
          python -m pip install pipx
          python -m pipx ensurepath
        shell: bash

      - name: Install poetry with pipx
        run: |
          pipx install poetry
        shell: bash

      - name: Add poetry to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Setup local virtual environment
        run: |
          cd ./garden-backend-service
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
        shell: bash

      - uses: actions/cache@v3
        name: Define a cache for the venv based on the lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: |
          cd ./garden-backend-service
          poetry install --no-interaction --no-ansi --with=develop

      - name: Check for vulnerable libraries with safety
        run: |
          cd ./garden-backend-service
          poetry run safety check

      - name: Lint with Ruff
        run: |
          cd ./garden-backend-service
          poetry run ruff check --output-format=github

      - name: Test with pytest
        run: |
          cd ./garden-backend-service
          poetry run pytest
