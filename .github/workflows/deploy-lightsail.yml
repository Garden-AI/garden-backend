name: Build and Push Docker Image to Lightsail

on:
  push:
    branches:
      - dev
      - prod
  workflow_dispatch:


permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # Determine the environment suffix to target to based on the branch
    - name: Set Environment
      id: vars
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/prod" ]]; then
          echo "env=prod" >> $GITHUB_OUTPUT
        else
          echo "env=dev" >> $GITHUB_OUTPUT
        fi

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./garden-backend-service
        push: true
        tags: gardenai/garden-service:latest

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::557062710055:role/GH-action-garden-backend-lightsail-deployer
        aws-region: us-east-1

      # injects AWS credentials for "garden_lightsail_user_{dev, prod}" IAM user
    - name: (re-)deploy image to lightsail container service
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/prod" ]]; then
          CONFIG_JSON=$(jq --arg akid "${{ secrets.PROD_AWS_ACCESS_KEY_ID }}" \
                            --arg sak "${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}" \
            '.containers["garden-backend-service"].environment = {
              "GARDEN_ENV": "prod",
              "AWS_ACCESS_KEY_ID": $akid,
              "AWS_SECRET_ACCESS_KEY": $sak,
              "AWS_SECRET_NAME": "garden-backend-env-vars/prod"
            }' ./infra/modules/lightsail/deployment-config.json)
          aws lightsail create-container-service-deployment \
            --service-name garden-service-${{ steps.vars.outputs.env }} \
            --cli-input-json "$CONFIG_JSON"
        else
          CONFIG_JSON=$(jq --arg akid "${{ secrets.DEV_AWS_ACCESS_KEY_ID }}" \
                            --arg sak "${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}" \
            '.containers["garden-backend-service"].environment = {
              "GARDEN_ENV": "dev",
              "AWS_ACCESS_KEY_ID": $akid,
              "AWS_SECRET_ACCESS_KEY": $sak,
              "AWS_SECRET_NAME": "garden-backend-env-vars/dev"
            }' ./infra/modules/lightsail/deployment-config.json)
          aws lightsail create-container-service-deployment \
            --service-name garden-service-${{ steps.vars.outputs.env }} \
            --cli-input-json "$CONFIG_JSON"
        fi
