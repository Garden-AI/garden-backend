"""entrypoints table and dependent relationships

Revision ID: b7c6647b0e70
Revises: 46832a4335a5
Create Date: 2024-05-29 18:05:11.732509

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b7c6647b0e70'
down_revision: Union[str, None] = '46832a4335a5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('entrypoints',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('doi', sa.String(), nullable=False),
    sa.Column('doi_is_draft', sa.Boolean(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('year', sa.String(), nullable=False),
    sa.Column('func_uuid', sa.Uuid(), nullable=False),
    sa.Column('container_uuid', sa.Uuid(), nullable=False),
    sa.Column('base_image_uri', sa.String(), nullable=False),
    sa.Column('full_image_uri', sa.String(), nullable=False),
    sa.Column('notebook_url', sa.String(), nullable=False),
    sa.Column('short_name', sa.String(), nullable=False),
    sa.Column('function_text', sa.UnicodeText(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('container_uuid'),
    sa.UniqueConstraint('doi'),
    sa.UniqueConstraint('func_uuid')
    )
    op.create_table('authors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('entrypoint_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['entrypoint_id'], ['entrypoints.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dataset_metadata',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('doi', sa.String(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('data_type', sa.String(), nullable=True),
    sa.Column('repository', sa.String(), nullable=False),
    sa.Column('entrypoint_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['entrypoint_id'], ['entrypoints.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('doi')
    )
    op.create_table('model_metadata',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_identifier', sa.String(), nullable=False),
    sa.Column('model_repository', sa.String(), nullable=False),
    sa.Column('model_version', sa.String(), nullable=True),
    sa.Column('entrypoint_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['entrypoint_id'], ['entrypoints.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('paper_metadata',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('doi', sa.String(), nullable=False),
    sa.Column('citation', sa.String(), nullable=True),
    sa.Column('entrypoint_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['entrypoint_id'], ['entrypoints.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('repository_metadata',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('repo_name', sa.String(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('entrypoint_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['entrypoint_id'], ['entrypoints.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('entrypoint_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['entrypoint_id'], ['entrypoints.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_functions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('function_text', sa.UnicodeText(), nullable=False),
    sa.Column('entrypoint_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['entrypoint_id'], ['entrypoints.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('test_functions')
    op.drop_table('tags')
    op.drop_table('repository_metadata')
    op.drop_table('paper_metadata')
    op.drop_table('model_metadata')
    op.drop_table('dataset_metadata')
    op.drop_table('authors')
    op.drop_table('entrypoints')
    # ### end Alembic commands ###
